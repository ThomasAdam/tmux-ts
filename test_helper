# Copyright (c) 2015, Thomas Adam <thomas@xteddy.org>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
# OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# Helper routines for unit-tests.

# Helper functions
#
# die() - Error out with message.
# TODO: Consider requiring exit code as first argument.
die()
{
	printf "tmux-ut:  FATAL:  $@\n" >&2
	exit 99
}

# tmux() - Runs tmux with a set of command(s), wrapping up various options
# specific to unit-testing.
#
# TODO:  Consider augmenting ts(1) with separate channels for stdout/stderr,
# 		 so that they can be captured and made available, etc.
tmux()
{
	[ -x "$TMUX_CMD" ] || die "Cannot find: <<$TMUX_CMD>>"

	command $TMUX_BINARY "$@"
}

# setup() - Runs before each test.  In this case, ensure the tmp directory
# for the socket is present.
setup()
{
	[ -d "$TMUX_TMPDIR" ] || mkdir -p "$TMUX_TMPDIR"

	# Give a little bit of time between tests; in attached mode, some things
	# can be missed.
	sleep 0.5
}

# check_session_exists() - Returns 0 if the specified session exists, 1 if
# not.
check_session_exists()
{
	local output="$(tmux has-session -t$1 2>&1)"
	assert_status 0 $? "Session '$1' not found: $output"
}

# clients_attached() - Returns the number of clients attached to the
# specified session.
clients_attached()
{
	session_arg=${1:-}
	[ -n "$session_arg" ] && session_arg="-t $session_arg"

	echo "$(tmux display $session_arg -pF '#{session_attached}')"
}
